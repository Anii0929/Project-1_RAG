<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .frontend { fill: #e3f2fd; stroke: #1976d2; stroke-width: 2; }
      .api { fill: #f3e5f5; stroke: #7b1fa2; stroke-width: 2; }
      .rag { fill: #e8f5e8; stroke: #388e3c; stroke-width: 2; }
      .ai { fill: #fff3e0; stroke: #f57c00; stroke-width: 2; }
      .tools { fill: #fce4ec; stroke: #c2185b; stroke-width: 2; }
      .vector { fill: #e0f2f1; stroke: #00796b; stroke-width: 2; }
      .text { font-family: Arial, sans-serif; font-size: 12px; }
      .title { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; }
      .flow-arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .return-arrow { stroke: #666; stroke-width: 2; fill: none; marker-end: url(#arrowhead); stroke-dasharray: 5,5; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>

  <!-- Title -->
  <text x="600" y="30" text-anchor="middle" class="title" style="font-size: 18px;">RAG Chatbot Query Flow</text>

  <!-- Frontend Layer -->
  <rect x="50" y="70" width="300" height="120" class="frontend" rx="5"/>
  <text x="200" y="90" text-anchor="middle" class="title">Frontend (script.js)</text>
  <text x="60" y="110" class="text">1. User types query</text>
  <text x="60" y="125" class="text">2. sendMessage() triggered</text>
  <text x="60" y="140" class="text">3. POST /api/query</text>
  <text x="60" y="155" class="text">4. Show loading animation</text>
  <text x="60" y="170" class="text">13. Display response + sources</text>

  <!-- API Layer -->
  <rect x="450" y="70" width="300" height="120" class="api" rx="5"/>
  <text x="600" y="90" text-anchor="middle" class="title">FastAPI (app.py)</text>
  <text x="460" y="110" class="text">3. /api/query endpoint</text>
  <text x="460" y="125" class="text">4. Create session if needed</text>
  <text x="460" y="140" class="text">5. Call rag_system.query()</text>
  <text x="460" y="155" class="text">12. Return QueryResponse</text>
  <text x="460" y="170" class="text">    (answer, sources, session_id)</text>

  <!-- RAG System -->
  <rect x="850" y="70" width="300" height="120" class="rag" rx="5"/>
  <text x="1000" y="90" text-anchor="middle" class="title">RAG System (rag_system.py)</text>
  <text x="860" y="110" class="text">5. Build prompt with query</text>
  <text x="860" y="125" class="text">6. Get conversation history</text>
  <text x="860" y="140" class="text">7. Call ai_generator.generate_response()</text>
  <text x="860" y="155" class="text">11. Get sources, update history</text>
  <text x="860" y="170" class="text">12. Return (response, sources)</text>

  <!-- AI Generator -->
  <rect x="450" y="250" width="300" height="140" class="ai" rx="5"/>
  <text x="600" y="270" text-anchor="middle" class="title">AI Generator (ai_generator.py)</text>
  <text x="460" y="290" class="text">7. Send query to Claude with tools</text>
  <text x="460" y="305" class="text">8. If tool_use: handle_tool_execution()</text>
  <text x="460" y="320" class="text">   - Extract tool calls</text>
  <text x="460" y="335" class="text">   - Execute tools via tool_manager</text>
  <text x="460" y="350" class="text">   - Send results back to Claude</text>
  <text x="460" y="365" class="text">10. Return final AI response</text>

  <!-- Tool Manager & Search -->
  <rect x="100" y="450" width="280" height="140" class="tools" rx="5"/>
  <text x="240" y="470" text-anchor="middle" class="title">Search Tools (search_tools.py)</text>
  <text x="110" y="490" class="text">8. ToolManager.execute_tool()</text>
  <text x="110" y="505" class="text">9. CourseSearchTool.execute()</text>
  <text x="110" y="520" class="text">   - Parse query, course_name, lesson_number</text>
  <text x="110" y="535" class="text">   - Call vector_store.search()</text>
  <text x="110" y="550" class="text">   - Format results with headers</text>
  <text x="110" y="565" class="text">   - Track sources for UI</text>
  <text x="110" y="580" class="text">10. Return formatted search results</text>

  <!-- Vector Store -->
  <rect x="450" y="450" width="300" height="180" class="vector" rx="5"/>
  <text x="600" y="470" text-anchor="middle" class="title">Vector Store (vector_store.py)</text>
  <text x="460" y="490" class="text">9. VectorStore.search()</text>
  <text x="470" y="510" class="text">Step 1: Course Resolution</text>
  <text x="480" y="525" class="text">• Semantic search in course_catalog</text>
  <text x="480" y="540" class="text">• Find matching course title</text>
  <text x="470" y="560" class="text">Step 2: Filter Building</text>
  <text x="480" y="575" class="text">• Build ChromaDB filters</text>
  <text x="470" y="595" class="text">Step 3: Content Search</text>
  <text x="480" y="610" class="text">• Search course_content collection</text>
  <text x="460" y="625" class="text">10. Return SearchResults</text>

  <!-- ChromaDB -->
  <rect x="850" y="450" width="250" height="180" class="vector" rx="5"/>
  <text x="975" y="470" text-anchor="middle" class="title">ChromaDB Collections</text>
  <rect x="870" y="490" width="210" height="60" fill="#b2dfdb" stroke="#004d40" rx="3"/>
  <text x="975" y="510" text-anchor="middle" class="text" style="font-weight: bold;">course_catalog</text>
  <text x="880" y="525" class="text">• Course titles/metadata</text>
  <text x="880" y="540" class="text">• Instructor, lessons info</text>
  
  <rect x="870" y="560" width="210" height="60" fill="#b2dfdb" stroke="#004d40" rx="3"/>
  <text x="975" y="580" text-anchor="middle" class="text" style="font-weight: bold;">course_content</text>
  <text x="880" y="595" class="text">• Text chunks with embeddings</text>
  <text x="880" y="610" class="text">• Course/lesson metadata</text>

  <!-- Session Manager -->
  <rect x="100" y="700" width="250" height="80" class="rag" rx="5"/>
  <text x="225" y="720" text-anchor="middle" class="title">Session Manager</text>
  <text x="110" y="740" class="text">• Maintains conversation history</text>
  <text x="110" y="755" class="text">• Provides context to AI</text>
  <text x="110" y="770" class="text">• Updates after each exchange</text>

  <!-- Flow Arrows -->
  <!-- Frontend to API -->
  <line x1="350" y1="130" x2="450" y2="130" class="flow-arrow"/>
  <text x="400" y="125" class="text" style="font-size: 10px;">HTTP POST</text>

  <!-- API to RAG -->
  <line x1="750" y1="130" x2="850" y2="130" class="flow-arrow"/>

  <!-- RAG to AI -->
  <line x1="1000" y1="190" x2="600" y2="250" class="flow-arrow"/>

  <!-- AI to Tools -->
  <line x1="450" y1="320" x2="380" y2="450" class="flow-arrow"/>
  <text x="360" y="385" class="text" style="font-size: 10px;">Tool calls</text>

  <!-- Tools to Vector -->
  <line x1="380" y1="520" x2="450" y2="520" class="flow-arrow"/>

  <!-- Vector to ChromaDB -->
  <line x1="750" y1="520" x2="850" y2="520" class="flow-arrow"/>

  <!-- Return path arrows (dashed) -->
  <!-- ChromaDB back to Vector -->
  <line x1="850" y1="540" x2="750" y2="540" class="return-arrow"/>
  
  <!-- Vector back to Tools -->
  <line x1="450" y1="560" x2="380" y2="560" class="return-arrow"/>
  
  <!-- Tools back to AI -->
  <line x1="240" y1="450" x2="550" y2="390" class="return-arrow"/>
  
  <!-- AI back to RAG -->
  <line x1="600" y1="390" x2="1000" y2="250" class="return-arrow"/>
  
  <!-- RAG back to API -->
  <line x1="850" y1="150" x2="750" y2="150" class="return-arrow"/>
  
  <!-- API back to Frontend -->
  <line x1="450" y1="150" x2="350" y2="150" class="return-arrow"/>

  <!-- Session Manager connections -->
  <line x1="225" y1="700" x2="1000" y2="190" class="flow-arrow" stroke="#388e3c" stroke-dasharray="3,3"/>
  <text x="500" y="400" class="text" style="font-size: 10px; fill: #388e3c;">History context</text>

  <!-- Legend -->
  <rect x="50" y="820" width="600" height="60" fill="none" stroke="#ccc" rx="5"/>
  <text x="60" y="840" class="title">Flow Legend:</text>
  <line x1="60" y1="850" x2="90" y2="850" class="flow-arrow"/>
  <text x="100" y="855" class="text">Forward flow</text>
  <line x1="200" y1="850" x2="230" y2="850" class="return-arrow"/>
  <text x="240" y="855" class="text">Return flow</text>
  <line x1="340" y1="850" x2="370" y2="850" stroke="#388e3c" stroke-dasharray="3,3" stroke-width="2" fill="none" marker-end="url(#arrowhead)"/>
  <text x="380" y="855" class="text">Context flow</text>
</svg>